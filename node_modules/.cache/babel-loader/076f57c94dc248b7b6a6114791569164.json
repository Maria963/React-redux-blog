{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar SERVER_URL = \"http://127.0.0.1:8000\";\nvar Auth = axios.create();\nAuth.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401) {\n    localStorage.removeItem(\"access_token\");\n    window.location.href = \"/login\";\n  }\n\n  throw error;\n});\n\nfunction getCompanies() {\n  try {\n    var res = Auth.get(SERVER_URL + '/api/companies', {\n      headers: {\n        Authorization: \"Bearer \".concat(localStorage.getItem('access_token')),\n        'Content-Type': 'application/json'\n      }\n    });\n    return res;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction delCompany(id) {\n  try {\n    var res = axios.delete(SERVER_URL + '/api/companies/' + id, {\n      headers: {\n        Authorization: \"Bearer \".concat(localStorage.getItem('access_token')),\n        'Content-Type': 'application/json'\n      }\n    });\n    return res;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction createCompanies(_x) {\n  return _createCompanies.apply(this, arguments);\n}\n\nfunction _createCompanies() {\n  _createCompanies = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(data) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return Auth.post(SERVER_URL + '/api/companies', data, {\n              headers: {\n                Authorization: \"Bearer \".concat(localStorage.getItem('access_token')),\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 3:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", _context2.t0.response);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _createCompanies.apply(this, arguments);\n}\n\nfunction editCompanies(data) {\n  try {\n    var res = Auth.post(SERVER_URL + '/api/companies', data, {\n      headers: {\n        Authorization: \"Bearer \".concat(localStorage.getItem('access_token')),\n        'Content-Type': 'application/json'\n      }\n    });\n    return res;\n  } catch (error) {\n    return error.response;\n  }\n}\n\nvar login =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(data) {\n    var LOGIN_ENDPOINT, response, jwt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            LOGIN_ENDPOINT = \"\".concat(SERVER_URL, \"/api/login\");\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.post(LOGIN_ENDPOINT, data);\n\n          case 4:\n            response = _context.sent;\n            console.log(response); //  if(response.status === 200 && response.data.remember_token && response.data.expireAt){\n\n            if (response.status === 200 && response.data.success === true) {\n              jwt = response.data.token; //  let expire_at = response.data.expireAt;\n\n              localStorage.setItem(\"access_token\", jwt);\n            }\n\n            return _context.abrupt(\"return\", response.data.success);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 10]]);\n  }));\n\n  return function login(_x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/*\nconst register = async (data) => {\n    const SIGNUP_ENDPOINT = `${SERVER_URL}/api/user/register`;\n    try {\n        let response = await axios({\n            method: 'post',\n            responseType: 'json',\n            url: SIGNUP_ENDPOINT,\n            data: data\n          });\n    } catch(e){\n        console.log(e);\n    }\n}*/\n\n/*\nconst logout = (props) => {\n    localStorage.removeItem(\"access_token\");\n    props.history.push('/login');\n   // localStorage.removeItem(\"expire_at\");\n}\n*/\n\n\nvar isAuth = function isAuth() {\n  console.log(localStorage.getItem('access_token'));\n\n  if (localStorage.getItem('access_token') == null) {\n    return false;\n  }\n\n  return true;\n};\n\nexport { login, isAuth, SERVER_URL, Auth, getCompanies, delCompany, createCompanies, editCompanies };","map":{"version":3,"sources":["/home/cretrix/projects/React-blog/src/utils/JWTAuth.js"],"names":["axios","SERVER_URL","Auth","create","interceptors","response","use","error","status","localStorage","removeItem","window","location","href","getCompanies","res","get","headers","Authorization","getItem","console","delCompany","id","delete","createCompanies","data","post","editCompanies","login","LOGIN_ENDPOINT","log","success","jwt","token","setItem","isAuth"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst SERVER_URL = \"http://127.0.0.1:8000\"\n\nconst Auth = axios.create();\n\n\nAuth.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response.status === 401) {\n      localStorage.removeItem(\"access_token\");\n      window.location.href = \"/login\";\n    }\n    throw error;\n  }\n);\n\n\n\n function getCompanies () {\n  try {\n          let res =   Auth.get(SERVER_URL+'/api/companies',\n          {\n              headers: {\n                  Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n                  'Content-Type': 'application/json'\n              }\n          });\n          return res;\n      }\n    catch (error) {\n    console.error(error)\n  }\n    }\n\n function delCompany (id) {\n   try {\n     let res =  axios.delete(SERVER_URL+'/api/companies/'+id, {\n      headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n          'Content-Type': 'application/json'\n      }\n  } );\n   return res;\n }\n   catch (error) {\n    console.error(error)\n  }\n }   \n\nasync function createCompanies (data) {\n  try {\n    let res = await Auth.post(SERVER_URL+'/api/companies', data,{\n      headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n          'Content-Type': 'application/json'\n      }\n  })\n\n  return res;\n}\n  catch (error) {\n   return error.response;\n }\n }\n\n  function editCompanies (data) {\n  try {\n    let res =  Auth.post(SERVER_URL+'/api/companies', data,{\n      headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n          'Content-Type': 'application/json'\n      }\n  })\n\n  return res;\n}\n  catch (error) {\n   return error.response;\n }\n }\n\n\nconst login = async (data) => {\n    const LOGIN_ENDPOINT = `${SERVER_URL}/api/login`;\n    try {\n        let response = await axios.post(LOGIN_ENDPOINT, data);\n         console.log(response)\n      //  if(response.status === 200 && response.data.remember_token && response.data.expireAt){\n        if(response.status === 200 && response.data.success===true){\n            let jwt = response.data.token;\n          //  let expire_at = response.data.expireAt;\n          localStorage.setItem(\"access_token\", jwt);\n         \n        } \n        return response.data.success;\n\n    } catch(e){\n        console.log(e);\n    }\n}\n\n/*\nconst register = async (data) => {\n    const SIGNUP_ENDPOINT = `${SERVER_URL}/api/user/register`;\n    try {\n        let response = await axios({\n            method: 'post',\n            responseType: 'json',\n            url: SIGNUP_ENDPOINT,\n            data: data\n          });\n    } catch(e){\n        console.log(e);\n    }\n}*/\n/*\nconst logout = (props) => {\n    localStorage.removeItem(\"access_token\");\n    props.history.push('/login');\n   // localStorage.removeItem(\"expire_at\");\n}\n*/\n\nconst isAuth = () => {\n    console.log(localStorage.getItem('access_token'));\n    if (localStorage.getItem('access_token')==null) {\n        return false;\n    }\n   return true;\n}\n\n\nexport { login, isAuth, SERVER_URL ,Auth, getCompanies, delCompany,createCompanies, editCompanies}"]},"metadata":{},"sourceType":"module"}