{"ast":null,"code":"import _objectWithoutProperties from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/cretrix/projects/React-blog/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from \"../utils/JWTAuth.js\";\nexport var PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      if (!isAuth()) {\n        // not logged in so redirect to login page with the return url\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        });\n      } // authorised so return component\n\n\n      return React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/home/cretrix/projects/React-blog/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","isAuth","PrivateRoute","Component","component","rest","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAAUC,MAAV,QAAwB,qBAAxB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAA4BC,IAA5B;;AAAA,SACxB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AAC9B,UAAI,CAACL,MAAM,EAAX,EAAe;AACX;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEM,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAJ6B,CAM9B;;;AACA,aAAO,oBAAC,SAAD,oBAAeJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;AAAA,CAArB","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport {  isAuth } from \"../utils/JWTAuth.js\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!isAuth()) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)"]},"metadata":{},"sourceType":"module"}