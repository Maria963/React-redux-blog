{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cretrix/projects/React-blog/src/pages/employees/edit.js\";\nimport React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\n\nvar UpdateEmployee =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateEmployee, _Component);\n\n  function UpdateEmployee(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateEmployee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateEmployee).call(this, props));\n\n    _this.onChangeEmployeeFirstname = function (e) {\n      _this.setState({\n        first_name: e.target.value,\n        success: \"\",\n        nameerror: \"\"\n      });\n    };\n\n    _this.onChangeEmployeeLastname = function (e) {\n      _this.setState({\n        last_name: e.target.value,\n        success: \"\",\n        lastnameerror: \"\"\n      });\n    };\n\n    _this.onChangeEmployeeEmail = function (e) {\n      _this.setState({\n        email: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onChangeEmployeePhone = function (e) {\n      _this.setState({\n        phone: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onChangeEmployeeCompany = function (e) {\n      _this.setState({\n        company_id: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, first_name, last_name, company_id, email, phone, updateEmployee, employee_id, res;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, first_name = _this$state.first_name, last_name = _this$state.last_name, company_id = _this$state.company_id, email = _this$state.email, phone = _this$state.phone;\n                updateEmployee = {\n                  first_name: first_name,\n                  last_name: last_name,\n                  email: email,\n                  company_id: company_id,\n                  phone: phone\n                };\n                employee_id = _this.props.match.params.id;\n                _context.prev = 4;\n                _context.next = 7;\n                return Api.editEmployee(employee_id, updateEmployee);\n\n              case 7:\n                res = _context.sent;\n\n                if (res.status === 200) {\n                  _this.setState({\n                    success: res.data\n                  });\n                }\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](4);\n\n                _this.setState({\n                  nameerror: _context.t0.res.data.errors.first_name,\n                  lastnameerror: _context.t0.res.data.errors.last_name\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.companiesList = function () {\n      var _this$state2 = _this.state,\n          companies = _this$state2.companies,\n          company_id = _this$state2.company_id;\n      return companies.map(function (company) {\n        return React.createElement(\"option\", {\n          value: company.id,\n          key: company.id,\n          selected: company_id === company.id ? \"selected\" : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, company.name);\n      });\n    };\n\n    _this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      company_id: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      lastnameerror: \"\",\n      success: \"\",\n      companies: []\n    };\n    return _this;\n  }\n\n  _createClass(UpdateEmployee, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var employee_id, response, employee;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                employee_id = this.props.match.params.id;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return Api.getCompanies();\n\n              case 4:\n                response = _context2.sent;\n                _context2.next = 7;\n                return Api.getEmployee(employee_id);\n\n              case 7:\n                employee = _context2.sent;\n\n                if (response.status === 200) {\n                  this.setState({\n                    companies: response.data\n                  });\n                }\n\n                if (employee.status === 200) {\n                  this.setState({\n                    first_name: employee.data.first_name == null ? \"\" : employee.data.first_name,\n                    last_name: employee.data.last_name == null ? \"\" : employee.data.last_name,\n                    company_id: employee.data.company_id == null ? \"\" : employee.data.company_id,\n                    email: employee.data.email == null ? \"\" : employee.data.email,\n                    phone: employee.data.phone == null ? \"\" : employee.data.phone\n                  });\n                }\n\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.error(_context2.t0);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 12]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          first_name = _this$state3.first_name,\n          last_name = _this$state3.last_name,\n          email = _this$state3.email,\n          phone = _this$state3.phone,\n          nameerror = _this$state3.nameerror,\n          lastnameerror = _this$state3.lastnameerror,\n          success = _this$state3.success;\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Update New Employee\"), React.createElement(\"form\", {\n        encType: \"multipart/form-data\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        style: {\n          display: \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, nameerror, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), lastnameerror), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Firstname: \"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: first_name,\n        onChange: this.onChangeEmployeeFirstname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Lastname:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: last_name,\n        onChange: this.onChangeEmployeeLastname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Company name\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"company_id\",\n        onChange: this.onChangeEmployeeCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Choose Company\"), this.companiesList())), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: email,\n        onChange: this.onChangeEmployeeEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Phone: \"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: phone,\n        onChange: this.onChangeEmployeePhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update Employee\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        style: {\n          display: \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, success)));\n    }\n  }]);\n\n  return UpdateEmployee;\n}(Component);\n\nexport default UpdateEmployee;","map":{"version":3,"sources":["/home/cretrix/projects/React-blog/src/pages/employees/edit.js"],"names":["React","Component","Api","UpdateEmployee","props","onChangeEmployeeFirstname","e","setState","first_name","target","value","success","nameerror","onChangeEmployeeLastname","last_name","lastnameerror","onChangeEmployeeEmail","email","onChangeEmployeePhone","phone","onChangeEmployeeCompany","company_id","onSubmit","preventDefault","state","updateEmployee","employee_id","match","params","id","editEmployee","res","status","data","errors","companiesList","companies","map","company","name","getCompanies","response","getEmployee","employee","console","error","marginTop","display"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;;AADiB,UA0CnBC,yBA1CmB,GA0CS,UAAAC,CAAC,EAAI;AAC/B,YAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEF,CAAC,CAACG,MAAF,CAASC,KADT;AAEZC,QAAAA,OAAO,EAAE,EAFG;AAGZC,QAAAA,SAAS,EAAE;AAHC,OAAd;AAKD,KAhDkB;;AAAA,UAkDnBC,wBAlDmB,GAkDQ,UAAAP,CAAC,EAAI;AAC9B,YAAKC,QAAL,CAAc;AACZO,QAAAA,SAAS,EAAER,CAAC,CAACG,MAAF,CAASC,KADR;AAEZC,QAAAA,OAAO,EAAE,EAFG;AAGZI,QAAAA,aAAa,EAAE;AAHH,OAAd;AAKD,KAxDkB;;AAAA,UA0DnBC,qBA1DmB,GA0DK,UAAAV,CAAC,EAAI;AAC3B,YAAKC,QAAL,CAAc;AACZU,QAAAA,KAAK,EAAEX,CAAC,CAACG,MAAF,CAASC,KADJ;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KA/DkB;;AAAA,UAiEnBO,qBAjEmB,GAiEK,UAAAZ,CAAC,EAAI;AAC3B,YAAKC,QAAL,CAAc;AACZY,QAAAA,KAAK,EAAEb,CAAC,CAACG,MAAF,CAASC,KADJ;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAtEkB;;AAAA,UAwEnBS,uBAxEmB,GAwEO,UAAAd,CAAC,EAAI;AAC7B,YAAKC,QAAL,CAAc;AACZc,QAAAA,UAAU,EAAEf,CAAC,CAACG,MAAF,CAASC,KADT;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KA7EkB;;AAAA,UA+EnBW,QA/EmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA+ER,iBAAMhB,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTA,gBAAAA,CAAC,CAACiB,cAAF;AADS,8BAEmD,MAAKC,KAFxD,EAEDhB,UAFC,eAEDA,UAFC,EAEWM,SAFX,eAEWA,SAFX,EAEsBO,UAFtB,eAEsBA,UAFtB,EAEkCJ,KAFlC,eAEkCA,KAFlC,EAEyCE,KAFzC,eAEyCA,KAFzC;AAIHM,gBAAAA,cAJG,GAIc;AACrBjB,kBAAAA,UAAU,EAAVA,UADqB;AAErBM,kBAAAA,SAAS,EAATA,SAFqB;AAGrBG,kBAAAA,KAAK,EAALA,KAHqB;AAIrBI,kBAAAA,UAAU,EAAVA,UAJqB;AAKrBF,kBAAAA,KAAK,EAALA;AALqB,iBAJd;AAYLO,gBAAAA,WAZK,GAYS,MAAKtB,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,EAZjC;AAAA;AAAA;AAAA,uBAeS3B,GAAG,CAAC4B,YAAJ,CAAiBJ,WAAjB,EAA8BD,cAA9B,CAfT;;AAAA;AAeHM,gBAAAA,GAfG;;AAgBP,oBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,wBAAKzB,QAAL,CAAc;AACZI,oBAAAA,OAAO,EAAEoB,GAAG,CAACE;AADD,mBAAd;AAGD;;AApBM;AAAA;;AAAA;AAAA;AAAA;;AAsBP,sBAAK1B,QAAL,CAAc;AACZK,kBAAAA,SAAS,EAAE,YAAMmB,GAAN,CAAUE,IAAV,CAAeC,MAAf,CAAsB1B,UADrB;AAEZO,kBAAAA,aAAa,EAAE,YAAMgB,GAAN,CAAUE,IAAV,CAAeC,MAAf,CAAsBpB;AAFzB,iBAAd;;AAtBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA/EQ;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA4GnBqB,aA5GmB,GA4GH,YAAM;AAAA,yBACc,MAAKX,KADnB;AAAA,UACZY,SADY,gBACZA,SADY;AAAA,UACDf,UADC,gBACDA,UADC;AAGpB,aAAOe,SAAS,CAACC,GAAV,CAAc,UAAAC,OAAO,EAAI;AAC9B,eACE;AACE,UAAA,KAAK,EAAEA,OAAO,CAACT,EADjB;AAEE,UAAA,GAAG,EAAES,OAAO,CAACT,EAFf;AAGE,UAAA,QAAQ,EAAER,UAAU,KAAKiB,OAAO,CAACT,EAAvB,GAA4B,UAA5B,GAAyC,EAHrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGS,OAAO,CAACC,IALX,CADF;AASD,OAVM,CAAP;AAWD,KA1HkB;;AAGjB,UAAKf,KAAL,GAAa;AACXhB,MAAAA,UAAU,EAAE,EADD;AAEXM,MAAAA,SAAS,EAAE,EAFA;AAGXO,MAAAA,UAAU,EAAE,EAHD;AAIXJ,MAAAA,KAAK,EAAE,EAJI;AAKXE,MAAAA,KAAK,EAAE,EALI;AAMXe,MAAAA,MAAM,EAAE,EANG;AAOXtB,MAAAA,SAAS,EAAE,EAPA;AAQXG,MAAAA,aAAa,EAAE,EARJ;AASXJ,MAAAA,OAAO,EAAE,EATE;AAUXyB,MAAAA,SAAS,EAAE;AAVA,KAAb;AAHiB;AAelB;;;;;;;;;;;;;AAGKV,gBAAAA,W,GAAc,KAAKtB,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,E;;;uBAEnB3B,GAAG,CAACsC,YAAJ,E;;;AAAjBC,gBAAAA,Q;;uBACiBvC,GAAG,CAACwC,WAAJ,CAAgBhB,WAAhB,C;;;AAAjBiB,gBAAAA,Q;;AACJ,oBAAIF,QAAQ,CAACT,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAKzB,QAAL,CAAc;AAAE6B,oBAAAA,SAAS,EAAEK,QAAQ,CAACR;AAAtB,mBAAd;AACD;;AACD,oBAAIU,QAAQ,CAACX,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAKzB,QAAL,CAAc;AACZC,oBAAAA,UAAU,EACRmC,QAAQ,CAACV,IAAT,CAAczB,UAAd,IAA4B,IAA5B,GAAmC,EAAnC,GAAwCmC,QAAQ,CAACV,IAAT,CAAczB,UAF5C;AAGZM,oBAAAA,SAAS,EACP6B,QAAQ,CAACV,IAAT,CAAcnB,SAAd,IAA2B,IAA3B,GAAkC,EAAlC,GAAuC6B,QAAQ,CAACV,IAAT,CAAcnB,SAJ3C;AAKZO,oBAAAA,UAAU,EACRsB,QAAQ,CAACV,IAAT,CAAcZ,UAAd,IAA4B,IAA5B,GAAmC,EAAnC,GAAwCsB,QAAQ,CAACV,IAAT,CAAcZ,UAN5C;AAOZJ,oBAAAA,KAAK,EAAE0B,QAAQ,CAACV,IAAT,CAAchB,KAAd,IAAuB,IAAvB,GAA8B,EAA9B,GAAmC0B,QAAQ,CAACV,IAAT,CAAchB,KAP5C;AAQZE,oBAAAA,KAAK,EAAEwB,QAAQ,CAACV,IAAT,CAAcd,KAAd,IAAuB,IAAvB,GAA8B,EAA9B,GAAmCwB,QAAQ,CAACV,IAAT,CAAcd;AAR5C,mBAAd;AAUD;;;;;;;;AAEDyB,gBAAAA,OAAO,CAACC,KAAR;;;;;;;;;;;;;;;;;;6BAsFK;AAAA,yBASH,KAAKrB,KATF;AAAA,UAELhB,UAFK,gBAELA,UAFK;AAAA,UAGLM,SAHK,gBAGLA,SAHK;AAAA,UAILG,KAJK,gBAILA,KAJK;AAAA,UAKLE,KALK,gBAKLA,KALK;AAAA,UAMLP,SANK,gBAMLA,SANK;AAAA,UAOLG,aAPK,gBAOLA,aAPK;AAAA,UAQLJ,OARK,gBAQLA,OARK;AAUP,aACE;AAAK,QAAA,KAAK,EAAE;AAAEmC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAM,QAAA,OAAO,EAAC,qBAAd;AAAoC,QAAA,QAAQ,EAAE,KAAKxB,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,KAAK,EAAE;AAAEyB,UAAAA,OAAO,EAAE;AAAX,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGnC,SADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGGG,aAHH,CADF,EAME;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAEP,UAHT;AAIE,QAAA,QAAQ,EAAE,KAAKH,yBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CANF,EAeE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAES,SAHT;AAIE,QAAA,QAAQ,EAAE,KAAKD,wBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAfF,EAyBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,QAAQ,EAAE,KAAKO,uBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,EAMG,KAAKe,aAAL,EANH,CAFF,CAzBF,EAqCE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAElB,KAHT;AAIE,QAAA,QAAQ,EAAE,KAAKD,qBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CArCF,EA+CE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAEG,KAHT;AAIE,QAAA,QAAQ,EAAE,KAAKD,qBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CA/CF,EAyDE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,iBAFR;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAzDF,EAgEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAE;AAAE6B,UAAAA,OAAO,EAAE;AAAX,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpC,OADH,CAhEF,CAFF,CADF;AAyED;;;;EAhN0BV,S;;AAmN7B,eAAeE,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\n\nclass UpdateEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      company_id: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      lastnameerror: \"\",\n      success: \"\",\n      companies: []\n    };\n  }\n\n  async componentDidMount() {\n    let employee_id = this.props.match.params.id;\n    try {\n      let response = await Api.getCompanies();\n      let employee = await Api.getEmployee(employee_id);\n      if (response.status === 200) {\n        this.setState({ companies: response.data });\n      }\n      if (employee.status === 200) {\n        this.setState({\n          first_name:\n            employee.data.first_name == null ? \"\" : employee.data.first_name,\n          last_name:\n            employee.data.last_name == null ? \"\" : employee.data.last_name,\n          company_id:\n            employee.data.company_id == null ? \"\" : employee.data.company_id,\n          email: employee.data.email == null ? \"\" : employee.data.email,\n          phone: employee.data.phone == null ? \"\" : employee.data.phone\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  onChangeEmployeeFirstname = e => {\n    this.setState({\n      first_name: e.target.value,\n      success: \"\",\n      nameerror: \"\"\n    });\n  };\n\n  onChangeEmployeeLastname = e => {\n    this.setState({\n      last_name: e.target.value,\n      success: \"\",\n      lastnameerror: \"\"\n    });\n  };\n\n  onChangeEmployeeEmail = e => {\n    this.setState({\n      email: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onChangeEmployeePhone = e => {\n    this.setState({\n      phone: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onChangeEmployeeCompany = e => {\n    this.setState({\n      company_id: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n    const { first_name, last_name, company_id, email, phone } = this.state;\n\n    const updateEmployee = {\n      first_name,\n      last_name,\n      email,\n      company_id,\n      phone\n    };\n\n    let employee_id = this.props.match.params.id;\n\n    try {\n      let res = await Api.editEmployee(employee_id, updateEmployee);\n      if (res.status === 200) {\n        this.setState({\n          success: res.data\n        });\n      }\n    } catch (error) {\n      this.setState({\n        nameerror: error.res.data.errors.first_name,\n        lastnameerror: error.res.data.errors.last_name\n      });\n    }\n  };\n\n  companiesList = () => {\n    const { companies, company_id } = this.state;\n\n    return companies.map(company => {\n      return (\n        <option\n          value={company.id}\n          key={company.id}\n          selected={company_id === company.id ? \"selected\" : \"\"}\n        >\n          {company.name}\n        </option>\n      );\n    });\n  };\n\n  render() {\n    const {\n      first_name,\n      last_name,\n      email,\n      phone,\n      nameerror,\n      lastnameerror,\n      success\n    } = this.state;\n    return (\n      <div style={{ marginTop: 10 }}>\n        <h3>Update New Employee</h3>\n        <form encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\n          <div className=\"invalid-feedback\" style={{ display: \"block\" }}>\n            {nameerror}\n            <br />\n            {lastnameerror}\n          </div>\n          <div className=\"form-group\">\n            <label>Firstname: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={first_name}\n              onChange={this.onChangeEmployeeFirstname}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Lastname:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={last_name}\n              onChange={this.onChangeEmployeeLastname}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Company name</label>\n            <select\n              className=\"form-control\"\n              name=\"company_id\"\n              onChange={this.onChangeEmployeeCompany}\n            >\n              <option value=\"\">Choose Company</option>\n              {this.companiesList()}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={email}\n              onChange={this.onChangeEmployeeEmail}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Phone: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={phone}\n              onChange={this.onChangeEmployeePhone}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Update Employee\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n          <div className=\"valid-feedback\" style={{ display: \"block\" }}>\n            {success}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default UpdateEmployee;\n"]},"metadata":{},"sourceType":"module"}