{"ast":null,"code":"import _objectSpread from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_EMPLOYEES, DELETE_EMPLOYEE, UPDATE_EMPLOYEE, CREATE_EMPLOYEE, GET_EMPLOYEE, DELETE_COMPANY_EMPLOYEES } from \"../types/employees\";\nvar initialState = {\n  employeeData: [],\n  data: [],\n  errors: null,\n  success: null\n};\nexport default function employeesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_EMPLOYEES:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    case CREATE_EMPLOYEE:\n      return _objectSpread({}, state, {\n        success: action.payload.status,\n        errors: action.payload\n      });\n\n    case GET_EMPLOYEE:\n      return _objectSpread({}, state, {\n        employeeData: action.payload\n      });\n\n    case UPDATE_EMPLOYEE:\n      return _objectSpread({}, state, {\n        success: action.payload.status,\n        errors: action.payload\n      });\n\n    case DELETE_EMPLOYEE:\n      var newData = state.data.filter(function (employee) {\n        return employee.id !== action.payload;\n      });\n      return _objectSpread({}, state, {\n        data: newData,\n        del: action.payload\n      });\n\n    case DELETE_COMPANY_EMPLOYEES:\n      var newData11 = state.data.filter(function (employee) {\n        return employee.company_id !== action.payload;\n      });\n      return _objectSpread({}, state, {\n        data: newData11,\n        del: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/cretrix/projects/React-redux-blog/src/store/reducers/employeesReducer.js"],"names":["GET_EMPLOYEES","DELETE_EMPLOYEE","UPDATE_EMPLOYEE","CREATE_EMPLOYEE","GET_EMPLOYEE","DELETE_COMPANY_EMPLOYEES","initialState","employeeData","data","errors","success","employeesReducer","state","action","type","payload","status","newData","filter","employee","id","del","newData11","company_id"],"mappings":";AAAA,SACEA,aADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,YALF,EAMEC,wBANF,QAOO,oBAPP;AASA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;AAOA,eAAe,SAASC,gBAAT,GAAwD;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,aAAL;AACE,+BAAYY,KAAZ;AAAmBJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAAhC;;AACF,SAAKZ,eAAL;AACE,+BACKS,KADL;AAEEF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeC,MAF1B;AAGEP,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAHjB;;AAKF,SAAKX,YAAL;AACE,+BAAYQ,KAAZ;AAAmBL,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAAxC;;AACF,SAAKb,eAAL;AACE,+BACKU,KADL;AAEEF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeC,MAF1B;AAGEP,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAHjB;;AAKF,SAAKd,eAAL;AACE,UAAMgB,OAAO,GAAGL,KAAK,CAACJ,IAAN,CAAWU,MAAX,CACd,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACE,OAA3B;AAAA,OADM,CAAhB;AAGA,+BAAYH,KAAZ;AAAmBJ,QAAAA,IAAI,EAAES,OAAzB;AAAkCI,QAAAA,GAAG,EAAER,MAAM,CAACE;AAA9C;;AACF,SAAKV,wBAAL;AACE,UAAMiB,SAAS,GAAGV,KAAK,CAACJ,IAAN,CAAWU,MAAX,CAChB,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACI,UAAT,KAAwBV,MAAM,CAACE,OAAnC;AAAA,OADQ,CAAlB;AAGA,+BAAYH,KAAZ;AAAmBJ,QAAAA,IAAI,EAAEc,SAAzB;AAAoCD,QAAAA,GAAG,EAAER,MAAM,CAACE;AAAhD;;AACF;AACE,aAAOH,KAAP;AA5BJ;AA8BD","sourcesContent":["import {\n  GET_EMPLOYEES,\n  DELETE_EMPLOYEE,\n  UPDATE_EMPLOYEE,\n  CREATE_EMPLOYEE,\n  GET_EMPLOYEE,\n  DELETE_COMPANY_EMPLOYEES\n} from \"../types/employees\";\n\nconst initialState = {\n  employeeData: [],\n  data: [],\n  errors: null,\n  success: null\n};\n\nexport default function employeesReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_EMPLOYEES:\n      return { ...state, data: action.payload };\n    case CREATE_EMPLOYEE:\n      return {\n        ...state,\n        success: action.payload.status,\n        errors: action.payload\n      };\n    case GET_EMPLOYEE:\n      return { ...state, employeeData: action.payload };\n    case UPDATE_EMPLOYEE:\n      return {\n        ...state,\n        success: action.payload.status,\n        errors: action.payload\n      };\n    case DELETE_EMPLOYEE:\n      const newData = state.data.filter(\n        employee => employee.id !== action.payload\n      );\n      return { ...state, data: newData, del: action.payload };\n    case DELETE_COMPANY_EMPLOYEES:\n      const newData11 = state.data.filter(\n        employee => employee.company_id !== action.payload\n      );\n      return { ...state, data: newData11, del: action.payload };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}