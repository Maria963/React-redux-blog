{"ast":null,"code":"import _objectSpread from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_EMPLOYEES, DELETE_EMPLOYEE, UPDATE_EMPLOYEE, CREATE_EMPLOYEE, GET_EMPLOYEE } from \"../types/employees\";\nvar initialState = {\n  employeeData: [],\n  data: [],\n  errors: null\n};\nexport default function employeesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_EMPLOYEES:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    case CREATE_EMPLOYEE:\n      return _objectSpread({}, state, {\n        success: action.payload.status\n      });\n\n    case GET_EMPLOYEE:\n      return _objectSpread({}, state, {\n        employeeData: action.payload\n      });\n\n    case UPDATE_EMPLOYEE:\n      return _objectSpread({}, state, {\n        update: action.payload\n      });\n\n    case DELETE_EMPLOYEE:\n      var newData = state.data.filter(function (employee) {\n        return employee.id !== action.payload.id;\n      });\n      return _objectSpread({}, state, {\n        data: newData,\n        del: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/cretrix/projects/React-redux-blog/src/store/reducers/employeesReducer.js"],"names":["GET_EMPLOYEES","DELETE_EMPLOYEE","UPDATE_EMPLOYEE","CREATE_EMPLOYEE","GET_EMPLOYEE","initialState","employeeData","data","errors","employeesReducer","state","action","type","payload","success","status","update","newData","filter","employee","id","del"],"mappings":";AAAA,SACEA,aADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,YALF,QAMO,oBANP;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;AAMA,eAAe,SAASC,gBAAT,GAAwD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,aAAL;AACE,+BAAYU,KAAZ;AAAmBH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAAhC;;AACF,SAAKV,eAAL;AACE,+BAAYO,KAAZ;AAAmBI,QAAAA,OAAO,EAAEH,MAAM,CAACE,OAAP,CAAeE;AAA3C;;AACF,SAAKX,YAAL;AACE,+BAAYM,KAAZ;AAAmBJ,QAAAA,YAAY,EAAEK,MAAM,CAACE;AAAxC;;AACF,SAAKX,eAAL;AACE,+BAAYQ,KAAZ;AAAmBM,QAAAA,MAAM,EAAEL,MAAM,CAACE;AAAlC;;AACF,SAAKZ,eAAL;AACE,UAAMgB,OAAO,GAAGP,KAAK,CAACH,IAAN,CAAWW,MAAX,CACd,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACE,OAAP,CAAeO,EAAnC;AAAA,OADM,CAAhB;AAGA,+BAAYV,KAAZ;AAAmBH,QAAAA,IAAI,EAAEU,OAAzB;AAAkCI,QAAAA,GAAG,EAAEV,MAAM,CAACE;AAA9C;;AACF;AACE,aAAOH,KAAP;AAfJ;AAiBD","sourcesContent":["import {\n  GET_EMPLOYEES,\n  DELETE_EMPLOYEE,\n  UPDATE_EMPLOYEE,\n  CREATE_EMPLOYEE,\n  GET_EMPLOYEE\n} from \"../types/employees\";\n\nconst initialState = {\n  employeeData: [],\n  data: [],\n  errors: null\n};\n\nexport default function employeesReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_EMPLOYEES:\n      return { ...state, data: action.payload };\n    case CREATE_EMPLOYEE:\n      return { ...state, success: action.payload.status };\n    case GET_EMPLOYEE:\n      return { ...state, employeeData: action.payload };\n    case UPDATE_EMPLOYEE:\n      return { ...state, update: action.payload };\n    case DELETE_EMPLOYEE:\n      const newData = state.data.filter(\n        employee => employee.id !== action.payload.id\n      );\n      return { ...state, data: newData, del: action.payload };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}