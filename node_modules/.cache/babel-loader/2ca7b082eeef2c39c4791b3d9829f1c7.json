{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { get, create, err, update, edit, delCompanies, errCreate, delCompanyEmployee } from \"./companiesTypeFunctions\";\nimport api from \"../../utils/api\";\nexport var getAllCompanies = function getAllCompanies() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return api.getCompanies();\n\n              case 3:\n                response = _context.sent;\n                return _context.abrupt(\"return\", dispatch(get(response.data)));\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                throw _context.t0;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var createCompany = function createCompany(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return api.createCompanies(data);\n\n              case 3:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", dispatch(create(response)));\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", dispatch(errCreate(_context2.t0.response.data.errors.name[0])));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editCompany = function editCompany(id, data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return api.editCompanies(id, data);\n\n              case 3:\n                response = _context3.sent;\n                dispatch(edit(response)); // return (window.location.pathname = \"companies\");\n\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", dispatch(err(_context3.t0.response.data.errors.name[0])));\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getCompany = function getCompany(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return api.getCompany(id);\n\n              case 3:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", dispatch(update(response)));\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                throw _context4.t0;\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var delCompany = function delCompany(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return api.delCompany(id);\n\n              case 3:\n                dispatch(delCompanies(id));\n                dispatch(delCompanyEmployee(id));\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                throw _context5.t0;\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 7]]);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/cretrix/projects/React-redux-blog/src/store/actions/companies.js"],"names":["get","create","err","update","edit","delCompanies","errCreate","delCompanyEmployee","api","getAllCompanies","dispatch","getCompanies","response","data","createCompany","createCompanies","errors","name","editCompany","id","editCompanies","getCompany","delCompany"],"mappings":"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","sourcesContent":["import {\n  get,\n  create,\n  err,\n  update,\n  edit,\n  delCompanies,\n  errCreate,\n  delCompanyEmployee\n} from \"./companiesTypeFunctions\";\nimport api from \"../../utils/api\";\n\nexport const getAllCompanies = () => {\n  return async dispatch => {\n    try {\n      let response = await api.getCompanies();\n      return dispatch(get(response.data));\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const createCompany = data => {\n  return async dispatch => {\n    try {\n      let response = await api.createCompanies(data);\n\n      return dispatch(create(response));\n    } catch (error) {\n      return dispatch(errCreate(error.response.data.errors.name[0]));\n    }\n  };\n};\n\nexport const editCompany = (id, data) => {\n  return async dispatch => {\n    try {\n      let response = await api.editCompanies(id, data);\n      dispatch(edit(response));\n      // return (window.location.pathname = \"companies\");\n    } catch (error) {\n      return dispatch(err(error.response.data.errors.name[0]));\n      // throw error;\n    }\n  };\n};\n\nexport const getCompany = id => {\n  return async dispatch => {\n    try {\n      let response = await api.getCompany(id);\n\n      return dispatch(update(response));\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const delCompany = id => {\n  return async dispatch => {\n    try {\n      await api.delCompany(id);\n\n      dispatch(delCompanies(id));\n      dispatch(delCompanyEmployee(id));\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}