{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { get, create, err, update, edit, delEmployees, errCreate } from \"./employeesTypeFunctions\";\nimport api from \"../../utils/api\";\nexport var getAllEmployees = function getAllEmployees() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return api.getEmployees();\n\n              case 3:\n                response = _context.sent;\n                return _context.abrupt(\"return\", dispatch(get(response.data)));\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                throw _context.t0;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var createEmployee = function createEmployee(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return api.createEmployees(data);\n\n              case 3:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", dispatch(create(response)));\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", dispatch(errCreate(_context2.t0.response.data.errors)));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editEmployee = function editEmployee(id, data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return api.editEmployee(id, data);\n\n              case 3:\n                response = _context3.sent;\n                return _context3.abrupt(\"return\", dispatch(edit(response)));\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", dispatch(err(_context3.t0.response.data.errors)));\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getEmployee = function getEmployee(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return api.getEmployee(id);\n\n              case 3:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", dispatch(update(response)));\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                throw _context4.t0;\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var delEmployee = function delEmployee(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return api.delEmployee(id);\n\n              case 3:\n                return _context5.abrupt(\"return\", dispatch(delEmployees(id)));\n\n              case 6:\n                _context5.prev = 6;\n                _context5.t0 = _context5[\"catch\"](0);\n                throw _context5.t0;\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 6]]);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/cretrix/projects/React-redux-blog/src/store/actions/employees.js"],"names":["get","create","err","update","edit","delEmployees","errCreate","api","getAllEmployees","dispatch","getEmployees","response","data","createEmployee","createEmployees","errors","editEmployee","id","getEmployee","delEmployee"],"mappings":"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","sourcesContent":["import {\n  get,\n  create,\n  err,\n  update,\n  edit,\n  delEmployees,\n  errCreate\n} from \"./employeesTypeFunctions\";\nimport api from \"../../utils/api\";\n\nexport const getAllEmployees = () => {\n  return async dispatch => {\n    try {\n      let response = await api.getEmployees();\n      return dispatch(get(response.data));\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const createEmployee = data => {\n  return async dispatch => {\n    try {\n      let response = await api.createEmployees(data);\n      return dispatch(create(response));\n    } catch (error) {\n      return dispatch(errCreate(error.response.data.errors));\n    }\n  };\n};\n\nexport const editEmployee = (id, data) => {\n  return async dispatch => {\n    try {\n      let response = await api.editEmployee(id, data);\n\n      return dispatch(edit(response));\n    } catch (error) {\n      return dispatch(err(error.response.data.errors));\n    }\n  };\n};\n\nexport const getEmployee = id => {\n  return async dispatch => {\n    try {\n      let response = await api.getEmployee(id);\n\n      return dispatch(update(response));\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const delEmployee = id => {\n  return async dispatch => {\n    try {\n      await api.delEmployee(id);\n      return dispatch(delEmployees(id));\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}