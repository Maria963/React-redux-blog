{"ast":null,"code":"import _classCallCheck from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cretrix/projects/React-redux-blog/src/pages/companies/create.js\";\nimport React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\nimport Input from \"../../components/basic/input-button\";\nimport Submit from \"../../components/basic/submit-button\";\nimport Errors from \"../../components/basic/errors\";\nimport Success from \"../../components/basic/success\";\nimport { connect } from \"react-redux\";\nimport { createCompany } from \"../../store/actions/companies\";\n\nvar CreateCompanies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateCompanies, _Component);\n\n  function CreateCompanies(props) {\n    var _this;\n\n    _classCallCheck(this, CreateCompanies);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateCompanies).call(this, props));\n\n    _this.onChangeCompaniesName = function (e) {\n      _this.setState({\n        name: e.target.value,\n        nameerror: \"\",\n        success: \"\"\n      });\n    };\n\n    _this.onChangeCompaniesEmail = function (e) {\n      _this.setState({\n        email: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onChangeCompaniesLogo = function (e) {\n      _this.setState({\n        logo: e.target.files[0],\n        success: \"\"\n      });\n    };\n\n    _this.onChangeCompaniesWebsite = function (e) {\n      _this.setState({\n        website: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      logo: \"\",\n      website: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      success: \"\",\n      inputKey: Date.now()\n    };\n    return _this;\n  }\n\n  _createClass(CreateCompanies, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onSubmit = function onSubmit(e) {\n        e.preventDefault();\n        var _this2$state = _this2.state,\n            name = _this2$state.name,\n            email = _this2$state.email,\n            logo = _this2$state.logo,\n            website = _this2$state.website;\n        var newCompanies = new FormData();\n        newCompanies.append(\"name\", name);\n        newCompanies.append(\"email\", email);\n        newCompanies.append(\"logo\", logo);\n        newCompanies.append(\"website\", website);\n        console.log(\"ddd\");\n\n        _this2.props.createCompanies(newCompanies);\n\n        console.log(_this2.props.success);\n\n        if (_this2.props.success === 201) {\n          console.log(\"success\"); //  this.props.history.push(\"/companies\");\n        } else {\n          console.log(\"ss\", _this2.props.errors);\n\n          _this2.setState({\n            nameerror: \"The name field is required.\"\n          });\n        }\n        /*\n        try {\n          let response = await Api.createCompanies(newCompanies);\n          if (response.status === 201) {\n            this.setState({\n              success: \"Company added\",\n              name: \"\",\n              email: \"\",\n              logo: \"\",\n              website: \"\",\n              inputKey: Date.now()\n            });\n          }\n        } catch (error) {\n          this.setState({\n            errors: error.response.data.message,\n            nameerror: error.response.data.errors.name\n          });\n        }*/\n\n      };\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          name = _this$state.name,\n          website = _this$state.website,\n          success = _this$state.success,\n          nameerror = _this$state.nameerror,\n          inputKey = _this$state.inputKey;\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Create New Company\"), React.createElement(\"form\", {\n        encType: \"multipart/form-data\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, console.log(\"ggg\", this.props.errors), console.log(\"ddd\", this.props.success), console.log(nameerror), React.createElement(Errors, {\n        name: nameerror,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Name:\",\n        type: \"text\",\n        value: name,\n        changeFunction: this.onChangeCompaniesName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Email:\",\n        type: \"email\",\n        value: email,\n        changeFunction: this.onChangeCompaniesEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Logo:\",\n        type: \"file\",\n        key: inputKey,\n        changeFunction: this.onChangeCompaniesLogo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"website:\",\n        type: \"text\",\n        value: website,\n        changeFunction: this.onChangeCompaniesWebsite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Submit, {\n        value: \"Create Company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Success, {\n        name: success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CreateCompanies;\n}(Component);\n\nexport var mapStateToProps = function mapStateToProps(state) {\n  return {\n    errors: state.companies.error,\n    success: state.companies.success\n  };\n};\nexport var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createCompanies: function createCompanies(posts) {\n      dispatch(createCompany(posts));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCompanies);","map":{"version":3,"sources":["/home/cretrix/projects/React-redux-blog/src/pages/companies/create.js"],"names":["React","Component","Api","Input","Submit","Errors","Success","connect","createCompany","CreateCompanies","props","onChangeCompaniesName","e","setState","name","target","value","nameerror","success","onChangeCompaniesEmail","email","onChangeCompaniesLogo","logo","files","onChangeCompaniesWebsite","website","state","errors","inputKey","Date","now","onSubmit","preventDefault","newCompanies","FormData","append","console","log","createCompanies","marginTop","mapStateToProps","companies","error","mapDispatchToProps","dispatch","posts"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\nimport Input from \"../../components/basic/input-button\";\nimport Submit from \"../../components/basic/submit-button\";\nimport Errors from \"../../components/basic/errors\";\nimport Success from \"../../components/basic/success\";\nimport { connect } from \"react-redux\";\nimport { createCompany } from \"../../store/actions/companies\";\n\nclass CreateCompanies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      logo: \"\",\n      website: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      success: \"\",\n      inputKey: Date.now()\n    };\n  }\n\n  onChangeCompaniesName = e => {\n    this.setState({\n      name: e.target.value,\n      nameerror: \"\",\n      success: \"\"\n    });\n  };\n\n  onChangeCompaniesEmail = e => {\n    this.setState({\n      email: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onChangeCompaniesLogo = e => {\n    this.setState({\n      logo: e.target.files[0],\n      success: \"\"\n    });\n  };\n\n  onChangeCompaniesWebsite = e => {\n    this.setState({\n      website: e.target.value,\n      success: \"\"\n    });\n  };\n\n  render() {\n    const onSubmit = e => {\n      e.preventDefault();\n      const { name, email, logo, website } = this.state;\n      const newCompanies = new FormData();\n      newCompanies.append(\"name\", name);\n      newCompanies.append(\"email\", email);\n      newCompanies.append(\"logo\", logo);\n      newCompanies.append(\"website\", website);\n      console.log(\"ddd\");\n\n      this.props.createCompanies(newCompanies);\n      console.log(this.props.success);\n      if (this.props.success === 201) {\n        console.log(\"success\");\n        //  this.props.history.push(\"/companies\");\n      } else {\n        console.log(\"ss\", this.props.errors);\n        this.setState({\n          nameerror: \"The name field is required.\"\n        });\n      }\n\n      /*\n      try {\n        let response = await Api.createCompanies(newCompanies);\n        if (response.status === 201) {\n          this.setState({\n            success: \"Company added\",\n            name: \"\",\n            email: \"\",\n            logo: \"\",\n            website: \"\",\n            inputKey: Date.now()\n          });\n        }\n      } catch (error) {\n        this.setState({\n          errors: error.response.data.message,\n          nameerror: error.response.data.errors.name\n        });\n      }*/\n    };\n\n    const { email, name, website, success, nameerror, inputKey } = this.state;\n    return (\n      <div style={{ marginTop: 10 }}>\n        <h3>Create New Company</h3>\n        <form encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\n          {console.log(\"ggg\", this.props.errors)}\n          {console.log(\"ddd\", this.props.success)}\n          {console.log(nameerror)}\n          <Errors name={nameerror} />\n          <Input\n            name=\"Name:\"\n            type=\"text\"\n            value={name}\n            changeFunction={this.onChangeCompaniesName}\n          />\n          <Input\n            name=\"Email:\"\n            type=\"email\"\n            value={email}\n            changeFunction={this.onChangeCompaniesEmail}\n          />\n          <Input\n            name=\"Logo:\"\n            type=\"file\"\n            key={inputKey}\n            changeFunction={this.onChangeCompaniesLogo}\n          />\n          <Input\n            name=\"website:\"\n            type=\"text\"\n            value={website}\n            changeFunction={this.onChangeCompaniesWebsite}\n          />\n          <Submit value=\"Create Company\" />\n          <Success name={success} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => {\n  return {\n    errors: state.companies.error,\n    success: state.companies.success\n  };\n};\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    createCompanies: posts => {\n      dispatch(createCompany(posts));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCompanies);\n"]},"metadata":{},"sourceType":"module"}