{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cretrix/projects/React-redux-blog/src/pages/companies/create.js\";\nimport React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\nimport Input from \"../../components/basic/input-button\";\nimport Submit from \"../../components/basic/submit-button\";\nimport Errors from \"../../components/basic/errors\";\nimport Success from \"../../components/basic/success\";\nimport { connect } from \"react-redux\";\nimport { createCompany } from \"../../store/actions/companies\";\n\nvar CreateCompanies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateCompanies, _Component);\n\n  function CreateCompanies(props) {\n    var _this;\n\n    _classCallCheck(this, CreateCompanies);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateCompanies).call(this, props));\n\n    _this.onChangeCompaniesName = function (e) {\n      _this.setState({\n        name: e.target.value,\n        nameerror: \"\",\n        success: \"\"\n      });\n    };\n\n    _this.onChangeCompaniesEmail = function (e) {\n      _this.setState({\n        email: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onChangeCompaniesLogo = function (e) {\n      _this.setState({\n        logo: e.target.files[0],\n        success: \"\"\n      });\n    };\n\n    _this.onChangeCompaniesWebsite = function (e) {\n      _this.setState({\n        website: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, name, email, logo, website, newCompanies;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, name = _this$state.name, email = _this$state.email, logo = _this$state.logo, website = _this$state.website;\n                newCompanies = new FormData();\n                newCompanies.append(\"name\", name);\n                newCompanies.append(\"email\", email);\n                newCompanies.append(\"logo\", logo);\n                newCompanies.append(\"website\", website);\n                console.log(\"ddd\");\n\n                _this.props.createCompanies(newCompanies);\n\n                _this.setState({\n                  nameerror: _this.props.errors\n                });\n                /*\n                try {\n                  let response = await Api.createCompanies(newCompanies);\n                  if (response.status === 201) {\n                    this.setState({\n                      success: \"Company added\",\n                      name: \"\",\n                      email: \"\",\n                      logo: \"\",\n                      website: \"\",\n                      inputKey: Date.now()\n                    });\n                  }\n                } catch (error) {\n                  this.setState({\n                    errors: error.response.data.message,\n                    nameerror: error.response.data.errors.name\n                  });\n                }*/\n\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      logo: \"\",\n      website: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      success: \"\",\n      inputKey: Date.now()\n    };\n    return _this;\n  }\n\n  _createClass(CreateCompanies, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          name = _this$state2.name,\n          website = _this$state2.website,\n          success = _this$state2.success,\n          nameerror = _this$state2.nameerror,\n          inputKey = _this$state2.inputKey;\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Create New Company\"), React.createElement(\"form\", {\n        encType: \"multipart/form-data\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, console.log(nameerror), React.createElement(Errors, {\n        name: nameerror,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Name:\",\n        type: \"text\",\n        value: name,\n        changeFunction: this.onChangeCompaniesName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Email:\",\n        type: \"email\",\n        value: email,\n        changeFunction: this.onChangeCompaniesEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Logo:\",\n        type: \"file\",\n        key: inputKey,\n        changeFunction: this.onChangeCompaniesLogo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"website:\",\n        type: \"text\",\n        value: website,\n        changeFunction: this.onChangeCompaniesWebsite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Submit, {\n        value: \"Create Company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(Success, {\n        name: success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), console.log(this.props.errors)));\n    }\n  }]);\n\n  return CreateCompanies;\n}(Component);\n\nexport var mapStateToProps = function mapStateToProps(state) {\n  return {\n    errors: state.companies.error\n  };\n};\nexport var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createCompanies: function createCompanies(posts) {\n      dispatch(createCompany(posts));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCompanies);","map":{"version":3,"sources":["/home/cretrix/projects/React-redux-blog/src/pages/companies/create.js"],"names":["React","Component","Api","Input","Submit","Errors","Success","connect","createCompany","CreateCompanies","props","onChangeCompaniesName","e","setState","name","target","value","nameerror","success","onChangeCompaniesEmail","email","onChangeCompaniesLogo","logo","files","onChangeCompaniesWebsite","website","onSubmit","preventDefault","state","newCompanies","FormData","append","console","log","createCompanies","errors","inputKey","Date","now","marginTop","mapStateToProps","companies","error","mapDispatchToProps","dispatch","posts"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\nimport Input from \"../../components/basic/input-button\";\nimport Submit from \"../../components/basic/submit-button\";\nimport Errors from \"../../components/basic/errors\";\nimport Success from \"../../components/basic/success\";\nimport { connect } from \"react-redux\";\nimport { createCompany } from \"../../store/actions/companies\";\n\nclass CreateCompanies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      logo: \"\",\n      website: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      success: \"\",\n      inputKey: Date.now()\n    };\n  }\n\n  onChangeCompaniesName = e => {\n    this.setState({\n      name: e.target.value,\n      nameerror: \"\",\n      success: \"\"\n    });\n  };\n\n  onChangeCompaniesEmail = e => {\n    this.setState({\n      email: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onChangeCompaniesLogo = e => {\n    this.setState({\n      logo: e.target.files[0],\n      success: \"\"\n    });\n  };\n\n  onChangeCompaniesWebsite = e => {\n    this.setState({\n      website: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n    const { name, email, logo, website } = this.state;\n    const newCompanies = new FormData();\n    newCompanies.append(\"name\", name);\n    newCompanies.append(\"email\", email);\n    newCompanies.append(\"logo\", logo);\n    newCompanies.append(\"website\", website);\n    console.log(\"ddd\");\n    this.props.createCompanies(newCompanies);\n    this.setState({\n      nameerror: this.props.errors\n    });\n\n    /*\n    try {\n      let response = await Api.createCompanies(newCompanies);\n      if (response.status === 201) {\n        this.setState({\n          success: \"Company added\",\n          name: \"\",\n          email: \"\",\n          logo: \"\",\n          website: \"\",\n          inputKey: Date.now()\n        });\n      }\n    } catch (error) {\n      this.setState({\n        errors: error.response.data.message,\n        nameerror: error.response.data.errors.name\n      });\n    }*/\n  };\n\n  render() {\n    const { email, name, website, success, nameerror, inputKey } = this.state;\n    return (\n      <div style={{ marginTop: 10 }}>\n        <h3>Create New Company</h3>\n        <form encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\n          {console.log(nameerror)}\n          <Errors name={nameerror} />\n          <Input\n            name=\"Name:\"\n            type=\"text\"\n            value={name}\n            changeFunction={this.onChangeCompaniesName}\n          />\n          <Input\n            name=\"Email:\"\n            type=\"email\"\n            value={email}\n            changeFunction={this.onChangeCompaniesEmail}\n          />\n          <Input\n            name=\"Logo:\"\n            type=\"file\"\n            key={inputKey}\n            changeFunction={this.onChangeCompaniesLogo}\n          />\n          <Input\n            name=\"website:\"\n            type=\"text\"\n            value={website}\n            changeFunction={this.onChangeCompaniesWebsite}\n          />\n          <Submit value=\"Create Company\" />\n          <Success name={success} />\n          {console.log(this.props.errors)}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => {\n  return {\n    errors: state.companies.error\n  };\n};\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    createCompanies: posts => {\n      dispatch(createCompany(posts));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCompanies);\n"]},"metadata":{},"sourceType":"module"}