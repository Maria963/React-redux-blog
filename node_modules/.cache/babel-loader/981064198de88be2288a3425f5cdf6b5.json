{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/react-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/react-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar SERVER_URL = \"http://127.0.0.1:8000\";\n\nvar login =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(data) {\n    var LOGIN_ENDPOINT, response, jwt, token;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            LOGIN_ENDPOINT = \"\".concat(SERVER_URL, \"/api/user/login\");\n            console.log('ddd');\n            _context.prev = 2;\n            _context.next = 5;\n            return axios.post(LOGIN_ENDPOINT, data);\n\n          case 5:\n            response = _context.sent;\n            console.log(response); //  if(response.status === 200 && response.data.remember_token && response.data.expireAt){\n\n            if (!(response.status === 200)) {\n              _context.next = 11;\n              break;\n            }\n\n            jwt = response.data.data.remember_token; //  let expire_at = response.data.expireAt;\n\n            token = localStorage.setItem(\"access_token\", jwt); //  localStorage.setItem(\"expire_at\", expire_at);\n\n            return _context.abrupt(\"return\", response.data.data.remember_token);\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 13]]);\n  }));\n\n  return function login(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar register =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(data) {\n    var SIGNUP_ENDPOINT, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            SIGNUP_ENDPOINT = \"\".concat(SERVER_URL, \"/api/user/register\");\n            _context2.prev = 1;\n            _context2.next = 4;\n            return axios({\n              method: 'post',\n              responseType: 'json',\n              url: SIGNUP_ENDPOINT,\n              data: data\n            });\n\n          case 4:\n            response = _context2.sent;\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 7]]);\n  }));\n\n  return function register(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar logout = function logout() {\n  localStorage.removeItem(\"access_token\"); // localStorage.removeItem(\"expire_at\");\n};\n\nexport { login, register, logout };","map":{"version":3,"sources":["/home/cretrix/projects/react-blog/src/utils/JWTAuth.js"],"names":["axios","SERVER_URL","login","data","LOGIN_ENDPOINT","console","log","post","response","status","jwt","remember_token","token","localStorage","setItem","register","SIGNUP_ENDPOINT","method","responseType","url","logout","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,UAAU,GAAG,uBAAnB;;AAGA,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,YAAAA,cADI,aACgBH,UADhB;AAEVI,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAFU;AAAA;AAAA,mBAKeN,KAAK,CAACO,IAAN,CAAWH,cAAX,EAA2BD,IAA3B,CALf;;AAAA;AAKFK,YAAAA,QALE;AAMLH,YAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ,EANK,CAOR;;AAPQ,kBAQHA,QAAQ,CAACC,MAAT,KAAoB,GARjB;AAAA;AAAA;AAAA;;AASEC,YAAAA,GATF,GASQF,QAAQ,CAACL,IAAT,CAAcA,IAAd,CAAmBQ,cAT3B,EAUJ;;AAEMC,YAAAA,KAZF,GAYUC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCJ,GAArC,CAZV,EAcJ;;AAdI,6CAeKF,QAAQ,CAACL,IAAT,CAAcA,IAAd,CAAmBQ,cAfxB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBNN,YAAAA,OAAO,CAACC,GAAR;;AApBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALJ,KAAK;AAAA;AAAA;AAAA,GAAX;;AAyBA,IAAMa,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOZ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPa,YAAAA,eADO,aACcf,UADd;AAAA;AAAA;AAAA,mBAGYD,KAAK,CAAC;AACvBiB,cAAAA,MAAM,EAAE,MADe;AAEvBC,cAAAA,YAAY,EAAE,MAFS;AAGvBC,cAAAA,GAAG,EAAEH,eAHkB;AAIvBb,cAAAA,IAAI,EAAEA;AAJiB,aAAD,CAHjB;;AAAA;AAGLK,YAAAA,QAHK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUTH,YAAAA,OAAO,CAACC,GAAR;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARS,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAcA,IAAMK,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBP,EAAAA,YAAY,CAACQ,UAAb,CAAwB,cAAxB,EADiB,CAElB;AACF,CAHD;;AAMA,SAASnB,KAAT,EAAgBa,QAAhB,EAA0BK,MAA1B","sourcesContent":["import axios from 'axios';\nconst SERVER_URL = \"http://127.0.0.1:8000\";\n\n\nconst login = async (data) => {\n    const LOGIN_ENDPOINT = `${SERVER_URL}/api/user/login`;\n    console.log('ddd');\n    try {\n\n        let response = await axios.post(LOGIN_ENDPOINT, data);\n         console.log(response);\n      //  if(response.status === 200 && response.data.remember_token && response.data.expireAt){\n        if(response.status === 200){\n            let jwt = response.data.data.remember_token;\n          //  let expire_at = response.data.expireAt;\n          \n            let token = localStorage.setItem(\"access_token\", jwt);\n       \n          //  localStorage.setItem(\"expire_at\", expire_at);\n            return response.data.data.remember_token;\n        }\n\n\n    } catch(e){\n        console.log(e);\n    }\n}\n\n\nconst register = async (data) => {\n    const SIGNUP_ENDPOINT = `${SERVER_URL}/api/user/register`;\n    try {\n        let response = await axios({\n            method: 'post',\n            responseType: 'json',\n            url: SIGNUP_ENDPOINT,\n            data: data\n          });\n    } catch(e){\n        console.log(e);\n    }\n}\n\nconst logout = () => {\n    localStorage.removeItem(\"access_token\");\n   // localStorage.removeItem(\"expire_at\");\n}\n\n\nexport { login, register, logout }"]},"metadata":{},"sourceType":"module"}