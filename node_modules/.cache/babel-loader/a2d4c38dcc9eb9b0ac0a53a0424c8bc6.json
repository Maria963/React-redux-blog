{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cretrix/projects/React-blog/src/pages/companies-list.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { SERVER_URL, getCompanies, delCompany } from \"../utils/JWTAuth.js\";\n\nvar CompaniesList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompaniesList, _Component);\n\n  function CompaniesList(props) {\n    var _this;\n\n    _classCallCheck(this, CompaniesList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompaniesList).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getCompanies();\n\n            case 3:\n              response = _context.sent;\n\n              if (response.status == 200) {\n                _this.setState({\n                  companies: response.data\n                });\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    _this.removeCompany = function (id) {\n      console.log(id);\n\n      var removeFav = _this.state.companies.filter(function (company) {\n        return company.id !== id;\n      });\n\n      console.log(removeFav);\n\n      _this.setState({\n        companies: removeFav\n      });\n    };\n\n    _this.deleteCompany =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.removeCompany(id);\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return delCompany(id);\n\n              case 4:\n                res = _context2.sent;\n\n                if (res.status == 200) {\n                  _this.setState({\n                    success: 'Company deleted'\n                  });\n                }\n\n                _context2.next = 10;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.companyList = function () {\n      return _this.state.companies.map(function (currentcompany, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, currentcompany.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, currentcompany.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"  \", currentcompany.logo ? React.createElement(\"img\", {\n          style: {\n            width: '50px'\n          },\n          src: SERVER_URL + '/storage/logos/' + currentcompany.logo,\n          alt: \"img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }) : ''), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, currentcompany.website), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          style: {\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \" \", React.createElement(Link, {\n          to: \"/companies/\" + currentcompany.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Edit\")), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this.deleteCompany(currentcompany.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Delete\")));\n      });\n    };\n\n    _this.state = {\n      companies: [],\n      success: ''\n    };\n    return _this;\n  }\n\n  _createClass(CompaniesList, [{\n    key: \"render\",\n    value: function render() {\n      var success = this.state.success;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Company List\"), React.createElement(\"div\", {\n        className: \"navbar-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/create\",\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Create Companies\"))), React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        style: {\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, success), React.createElement(\"table\", {\n        className: \"table table-striped\",\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Logo\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Website\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.companyList())));\n    }\n  }]);\n\n  return CompaniesList;\n}(Component);\n\nexport default CompaniesList;","map":{"version":3,"sources":["/home/cretrix/projects/React-blog/src/pages/companies-list.component.js"],"names":["React","Component","Link","axios","SERVER_URL","getCompanies","delCompany","CompaniesList","props","componentDidMount","response","status","setState","companies","data","console","error","removeCompany","id","log","removeFav","state","filter","company","deleteCompany","res","success","companyList","map","currentcompany","i","name","email","logo","width","website","marginRight","display","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport {  SERVER_URL, getCompanies, delCompany } from \"../utils/JWTAuth.js\";\n\n\n class CompaniesList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            companies: [],\n            success: ''\n        };\n\n    }\n\n    componentDidMount = async() => {\n\n            try {\n                \n                let response = await getCompanies();\n                if (response.status==200) {\n                    this.setState({ companies: response.data });\n\n                }\n                \n            } catch (error) {\n              console.error(error)\n        }\n    }\n\n\n    removeCompany = (id) => {\n        console.log(id);\n        const removeFav = this.state.companies.filter(company => company.id !== id ) \n        console.log(removeFav);\n        this.setState({\n            companies: removeFav\n        })\n      }\n\n    deleteCompany = async (id) =>  {\n        this.removeCompany(id);\n             try {\n                 let res = await delCompany(id);\n             if (res.status==200) {\n                this.setState({\n                    success: 'Company deleted',\n                }) \n             \n            }\n        } catch (error) {\n\n        }\n    }\n\n\n    companyList = () => {\n        \n        return this.state.companies.map((currentcompany, i)=> {\n            return  <tr key={i} >\n            <td>{currentcompany.name}</td>\n            <td>{currentcompany.email}</td>\n            <td>  {currentcompany.logo ? (\n      <img style={{width: '50px'}} src = {SERVER_URL+'/storage/logos/'+currentcompany.logo} alt='img' />\n      ) : ''} \n      </td>\n            <td>{currentcompany.website}</td>\n            <td>\n               <button style={{marginRight: '10px'}}> <Link to={\"/companies/\"+currentcompany.id}>Edit</Link></button>\n                <button onClick={()=>this.deleteCompany(currentcompany.id)}>Delete</button>\n            </td>\n        </tr>\n        })\n    }\n\n    render() {\n        const  {success} = this.state;\n        return (\n            <div>\n                <div className=\"row\">\n                    <h3>Company List</h3>\n                    <div className=\"navbar-item\">\n                    <Link to=\"/create\" className=\"nav-link\">Create Companies</Link>\n                    </div> \n                </div>\n                <div className=\"valid-feedback\" style={{display: 'block'}}>\n                    {success}\n                </div>\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Logo</th>\n                            <th>Website</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.companyList() }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default CompaniesList;"]},"metadata":{},"sourceType":"module"}