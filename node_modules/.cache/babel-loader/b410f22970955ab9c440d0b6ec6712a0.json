{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cretrix/projects/React-redux-blog/src/pages/employees/edit.js\";\nimport React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\nimport Input from \"../../components/basic/input-button\";\nimport Submit from \"../../components/basic/submit-button\";\nimport Select from \"../../components/basic/select\";\nimport Errors from \"../../components/basic/errors\";\nimport Success from \"../../components/basic/success\";\nimport { connect } from \"react-redux\";\nimport { mapStateToProps, mapDispatchToProps } from \"../../store/containers/employees/edit\";\n\nvar UpdateEmployee =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateEmployee, _Component);\n\n  function UpdateEmployee(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateEmployee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateEmployee).call(this, props));\n\n    _this.onChangeEmployeeFirstname = function (e) {\n      _this.setState({\n        first_name: e.target.value,\n        success: \"\",\n        nameerror: \"\"\n      });\n    };\n\n    _this.onChangeEmployeeLastname = function (e) {\n      _this.setState({\n        last_name: e.target.value,\n        success: \"\",\n        lastnameerror: \"\"\n      });\n    };\n\n    _this.onChangeEmployeeEmail = function (e) {\n      _this.setState({\n        email: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onChangeEmployeePhone = function (e) {\n      _this.setState({\n        phone: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onChangeEmployeeCompany = function (e) {\n      _this.setState({\n        company_id: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, first_name, last_name, company_id, email, phone, updateEmployee, employee_id;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, first_name = _this$state.first_name, last_name = _this$state.last_name, company_id = _this$state.company_id, email = _this$state.email, phone = _this$state.phone;\n                updateEmployee = {\n                  first_name: first_name,\n                  last_name: last_name,\n                  email: email,\n                  company_id: company_id,\n                  phone: phone\n                };\n                employee_id = _this.props.match.params.id;\n                _context.next = 6;\n                return _this.props.editEmployee(employee_id, updateEmployee);\n\n              case 6:\n                if (_this.props.success === 200) {\n                  _this.props.history.push(\"/employees\");\n                } else {\n                  _this.setState({\n                    nameerror: _this.props.errors.first_name,\n                    lastnameerror: _this.props.errors.last_name\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.companiesList = function () {\n      var company_id = _this.state.company_id;\n      var companies = _this.props.companies;\n      return companies.map(function (company) {\n        return React.createElement(\"option\", {\n          value: company.id,\n          key: company.id,\n          selected: company_id === company.id ? \"selected\" : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, company.name);\n      });\n    };\n\n    _this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      company_id: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      lastnameerror: \"\",\n      success: \"\",\n      companies: []\n    };\n    return _this;\n  }\n\n  _createClass(UpdateEmployee, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var employee_id;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                employee_id = this.props.match.params.id;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return this.props.getEmployee(employee_id);\n\n              case 4:\n                if (this.props.employee.status === 200) {\n                  this.setState({\n                    first_name: this.props.employee.data.first_name == null ? \"\" : this.props.employee.data.first_name,\n                    last_name: this.props.employee.data.last_name == null ? \"\" : this.props.employee.data.last_name,\n                    company_id: this.props.employee.data.company_id == null ? \"\" : this.props.employee.data.company_id,\n                    email: this.props.employee.data.email == null ? \"\" : this.props.employee.data.email,\n                    phone: this.props.employee.data.phone == null ? \"\" : this.props.employee.data.phone\n                  });\n                }\n\n                _context2.next = 9;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 7]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          first_name = _this$state2.first_name,\n          last_name = _this$state2.last_name,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          nameerror = _this$state2.nameerror,\n          lastnameerror = _this$state2.lastnameerror,\n          success = _this$state2.success;\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Update New Employee\"), React.createElement(\"form\", {\n        encType: \"multipart/form-data\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Errors, {\n        name: nameerror,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Errors, {\n        name: lastnameerror,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Firstname:\",\n        type: \"text\",\n        value: first_name,\n        changeFunction: this.onChangeEmployeeFirstname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Lastname:\",\n        type: \"text\",\n        value: last_name,\n        changeFunction: this.onChangeEmployeeLastname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Select, {\n        name: \"Company name\",\n        id: \"company_id\",\n        changeFunction: this.onChangeEmployeeCompany,\n        default: \"Choose Company\",\n        optionList: this.companiesList(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Email:\",\n        type: \"email\",\n        value: email,\n        changeFunction: this.onChangeEmployeeEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Phone:\",\n        type: \"text\",\n        value: phone,\n        changeFunction: this.onChangeEmployeePhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(Submit, {\n        value: \"Update Employee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(Success, {\n        name: success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UpdateEmployee;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmployee);","map":{"version":3,"sources":["/home/cretrix/projects/React-redux-blog/src/pages/employees/edit.js"],"names":["React","Component","Api","Input","Submit","Select","Errors","Success","connect","mapStateToProps","mapDispatchToProps","UpdateEmployee","props","onChangeEmployeeFirstname","e","setState","first_name","target","value","success","nameerror","onChangeEmployeeLastname","last_name","lastnameerror","onChangeEmployeeEmail","email","onChangeEmployeePhone","phone","onChangeEmployeeCompany","company_id","onSubmit","preventDefault","state","updateEmployee","employee_id","match","params","id","editEmployee","history","push","errors","companiesList","companies","map","company","name","getEmployee","employee","status","data","marginTop"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,eADF,EAEEC,kBAFF,QAGO,uCAHP;;IAKMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;;AADiB,UAgDnBC,yBAhDmB,GAgDS,UAAAC,CAAC,EAAI;AAC/B,YAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEF,CAAC,CAACG,MAAF,CAASC,KADT;AAEZC,QAAAA,OAAO,EAAE,EAFG;AAGZC,QAAAA,SAAS,EAAE;AAHC,OAAd;AAKD,KAtDkB;;AAAA,UAwDnBC,wBAxDmB,GAwDQ,UAAAP,CAAC,EAAI;AAC9B,YAAKC,QAAL,CAAc;AACZO,QAAAA,SAAS,EAAER,CAAC,CAACG,MAAF,CAASC,KADR;AAEZC,QAAAA,OAAO,EAAE,EAFG;AAGZI,QAAAA,aAAa,EAAE;AAHH,OAAd;AAKD,KA9DkB;;AAAA,UAgEnBC,qBAhEmB,GAgEK,UAAAV,CAAC,EAAI;AAC3B,YAAKC,QAAL,CAAc;AACZU,QAAAA,KAAK,EAAEX,CAAC,CAACG,MAAF,CAASC,KADJ;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KArEkB;;AAAA,UAuEnBO,qBAvEmB,GAuEK,UAAAZ,CAAC,EAAI;AAC3B,YAAKC,QAAL,CAAc;AACZY,QAAAA,KAAK,EAAEb,CAAC,CAACG,MAAF,CAASC,KADJ;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KA5EkB;;AAAA,UA8EnBS,uBA9EmB,GA8EO,UAAAd,CAAC,EAAI;AAC7B,YAAKC,QAAL,CAAc;AACZc,QAAAA,UAAU,EAAEf,CAAC,CAACG,MAAF,CAASC,KADT;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAnFkB;;AAAA,UAqFnBW,QArFmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAqFR,iBAAMhB,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTA,gBAAAA,CAAC,CAACiB,cAAF;AADS,8BAEmD,MAAKC,KAFxD,EAEDhB,UAFC,eAEDA,UAFC,EAEWM,SAFX,eAEWA,SAFX,EAEsBO,UAFtB,eAEsBA,UAFtB,EAEkCJ,KAFlC,eAEkCA,KAFlC,EAEyCE,KAFzC,eAEyCA,KAFzC;AAIHM,gBAAAA,cAJG,GAIc;AACrBjB,kBAAAA,UAAU,EAAVA,UADqB;AAErBM,kBAAAA,SAAS,EAATA,SAFqB;AAGrBG,kBAAAA,KAAK,EAALA,KAHqB;AAIrBI,kBAAAA,UAAU,EAAVA,UAJqB;AAKrBF,kBAAAA,KAAK,EAALA;AALqB,iBAJd;AAYLO,gBAAAA,WAZK,GAYS,MAAKtB,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,EAZjC;AAAA;AAAA,uBAaH,MAAKzB,KAAL,CAAW0B,YAAX,CAAwBJ,WAAxB,EAAqCD,cAArC,CAbG;;AAAA;AAcT,oBAAI,MAAKrB,KAAL,CAAWO,OAAX,KAAuB,GAA3B,EAAgC;AAC9B,wBAAKP,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,iBAFD,MAEO;AACL,wBAAKzB,QAAL,CAAc;AACZK,oBAAAA,SAAS,EAAE,MAAKR,KAAL,CAAW6B,MAAX,CAAkBzB,UADjB;AAEZO,oBAAAA,aAAa,EAAE,MAAKX,KAAL,CAAW6B,MAAX,CAAkBnB;AAFrB,mBAAd;AAID;;AArBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OArFQ;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA6GnBoB,aA7GmB,GA6GH,YAAM;AAAA,UACZb,UADY,GACG,MAAKG,KADR,CACZH,UADY;AAAA,UAEZc,SAFY,GAEE,MAAK/B,KAFP,CAEZ+B,SAFY;AAGpB,aAAOA,SAAS,CAACC,GAAV,CAAc,UAAAC,OAAO,EAAI;AAC9B,eACE;AACE,UAAA,KAAK,EAAEA,OAAO,CAACR,EADjB;AAEE,UAAA,GAAG,EAAEQ,OAAO,CAACR,EAFf;AAGE,UAAA,QAAQ,EAAER,UAAU,KAAKgB,OAAO,CAACR,EAAvB,GAA4B,UAA5B,GAAyC,EAHrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGQ,OAAO,CAACC,IALX,CADF;AASD,OAVM,CAAP;AAWD,KA3HkB;;AAGjB,UAAKd,KAAL,GAAa;AACXhB,MAAAA,UAAU,EAAE,EADD;AAEXM,MAAAA,SAAS,EAAE,EAFA;AAGXO,MAAAA,UAAU,EAAE,EAHD;AAIXJ,MAAAA,KAAK,EAAE,EAJI;AAKXE,MAAAA,KAAK,EAAE,EALI;AAMXc,MAAAA,MAAM,EAAE,EANG;AAOXrB,MAAAA,SAAS,EAAE,EAPA;AAQXG,MAAAA,aAAa,EAAE,EARJ;AASXJ,MAAAA,OAAO,EAAE,EATE;AAUXwB,MAAAA,SAAS,EAAE;AAVA,KAAb;AAHiB;AAelB;;;;;;;;;;;;;AAGKT,gBAAAA,W,GAAc,KAAKtB,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,E;;;uBAElC,KAAKzB,KAAL,CAAWmC,WAAX,CAAuBb,WAAvB,C;;;AACN,oBAAI,KAAKtB,KAAL,CAAWoC,QAAX,CAAoBC,MAApB,KAA+B,GAAnC,EAAwC;AACtC,uBAAKlC,QAAL,CAAc;AACZC,oBAAAA,UAAU,EACR,KAAKJ,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyBlC,UAAzB,IAAuC,IAAvC,GACI,EADJ,GAEI,KAAKJ,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyBlC,UAJnB;AAKZM,oBAAAA,SAAS,EACP,KAAKV,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyB5B,SAAzB,IAAsC,IAAtC,GACI,EADJ,GAEI,KAAKV,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyB5B,SARnB;AASZO,oBAAAA,UAAU,EACR,KAAKjB,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyBrB,UAAzB,IAAuC,IAAvC,GACI,EADJ,GAEI,KAAKjB,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyBrB,UAZnB;AAaZJ,oBAAAA,KAAK,EACH,KAAKb,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyBzB,KAAzB,IAAkC,IAAlC,GACI,EADJ,GAEI,KAAKb,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyBzB,KAhBnB;AAiBZE,oBAAAA,KAAK,EACH,KAAKf,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyBvB,KAAzB,IAAkC,IAAlC,GACI,EADJ,GAEI,KAAKf,KAAL,CAAWoC,QAAX,CAAoBE,IAApB,CAAyBvB;AApBnB,mBAAd;AAsBD;;;;;;;;;;;;;;;;;;;;;;;;;6BAiFI;AAAA,yBASH,KAAKK,KATF;AAAA,UAELhB,UAFK,gBAELA,UAFK;AAAA,UAGLM,SAHK,gBAGLA,SAHK;AAAA,UAILG,KAJK,gBAILA,KAJK;AAAA,UAKLE,KALK,gBAKLA,KALK;AAAA,UAMLP,SANK,gBAMLA,SANK;AAAA,UAOLG,aAPK,gBAOLA,aAPK;AAAA,UAQLJ,OARK,gBAQLA,OARK;AAUP,aACE;AAAK,QAAA,KAAK,EAAE;AAAEgC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAM,QAAA,OAAO,EAAC,qBAAd;AAAoC,QAAA,QAAQ,EAAE,KAAKrB,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEV,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEG,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEP,UAHT;AAIE,QAAA,cAAc,EAAE,KAAKH,yBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EASE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAES,SAHT;AAIE,QAAA,cAAc,EAAE,KAAKD,wBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAeE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,EAAE,EAAC,YAFL;AAGE,QAAA,cAAc,EAAE,KAAKO,uBAHvB;AAIE,QAAA,OAAO,EAAC,gBAJV;AAKE,QAAA,UAAU,EAAE,KAAKc,aAAL,EALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAsBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAEjB,KAHT;AAIE,QAAA,cAAc,EAAE,KAAKD,qBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,EA4BE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEG,KAHT;AAIE,QAAA,cAAc,EAAE,KAAKD,qBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,EAkCE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlCF,EAmCE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEP,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCF,CAFF,CADF;AA0CD;;;;EAlL0BlB,S;;AAqL7B,eAAeO,OAAO,CAACC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CC,cAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\nimport Input from \"../../components/basic/input-button\";\nimport Submit from \"../../components/basic/submit-button\";\nimport Select from \"../../components/basic/select\";\nimport Errors from \"../../components/basic/errors\";\nimport Success from \"../../components/basic/success\";\nimport { connect } from \"react-redux\";\nimport {\n  mapStateToProps,\n  mapDispatchToProps\n} from \"../../store/containers/employees/edit\";\n\nclass UpdateEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      company_id: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      lastnameerror: \"\",\n      success: \"\",\n      companies: []\n    };\n  }\n\n  async componentDidMount() {\n    let employee_id = this.props.match.params.id;\n    try {\n      await this.props.getEmployee(employee_id);\n      if (this.props.employee.status === 200) {\n        this.setState({\n          first_name:\n            this.props.employee.data.first_name == null\n              ? \"\"\n              : this.props.employee.data.first_name,\n          last_name:\n            this.props.employee.data.last_name == null\n              ? \"\"\n              : this.props.employee.data.last_name,\n          company_id:\n            this.props.employee.data.company_id == null\n              ? \"\"\n              : this.props.employee.data.company_id,\n          email:\n            this.props.employee.data.email == null\n              ? \"\"\n              : this.props.employee.data.email,\n          phone:\n            this.props.employee.data.phone == null\n              ? \"\"\n              : this.props.employee.data.phone\n        });\n      }\n    } catch (error) {}\n  }\n\n  onChangeEmployeeFirstname = e => {\n    this.setState({\n      first_name: e.target.value,\n      success: \"\",\n      nameerror: \"\"\n    });\n  };\n\n  onChangeEmployeeLastname = e => {\n    this.setState({\n      last_name: e.target.value,\n      success: \"\",\n      lastnameerror: \"\"\n    });\n  };\n\n  onChangeEmployeeEmail = e => {\n    this.setState({\n      email: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onChangeEmployeePhone = e => {\n    this.setState({\n      phone: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onChangeEmployeeCompany = e => {\n    this.setState({\n      company_id: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n    const { first_name, last_name, company_id, email, phone } = this.state;\n\n    const updateEmployee = {\n      first_name,\n      last_name,\n      email,\n      company_id,\n      phone\n    };\n\n    let employee_id = this.props.match.params.id;\n    await this.props.editEmployee(employee_id, updateEmployee);\n    if (this.props.success === 200) {\n      this.props.history.push(\"/employees\");\n    } else {\n      this.setState({\n        nameerror: this.props.errors.first_name,\n        lastnameerror: this.props.errors.last_name\n      });\n    }\n  };\n\n  companiesList = () => {\n    const { company_id } = this.state;\n    const { companies } = this.props;\n    return companies.map(company => {\n      return (\n        <option\n          value={company.id}\n          key={company.id}\n          selected={company_id === company.id ? \"selected\" : \"\"}\n        >\n          {company.name}\n        </option>\n      );\n    });\n  };\n\n  render() {\n    const {\n      first_name,\n      last_name,\n      email,\n      phone,\n      nameerror,\n      lastnameerror,\n      success\n    } = this.state;\n    return (\n      <div style={{ marginTop: 10 }}>\n        <h3>Update New Employee</h3>\n        <form encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\n          <Errors name={nameerror} />\n          <Errors name={lastnameerror} />\n          <Input\n            name=\"Firstname:\"\n            type=\"text\"\n            value={first_name}\n            changeFunction={this.onChangeEmployeeFirstname}\n          />\n          <Input\n            name=\"Lastname:\"\n            type=\"text\"\n            value={last_name}\n            changeFunction={this.onChangeEmployeeLastname}\n          />\n          <Select\n            name=\"Company name\"\n            id=\"company_id\"\n            changeFunction={this.onChangeEmployeeCompany}\n            default=\"Choose Company\"\n            optionList={this.companiesList()}\n          />\n          <Input\n            name=\"Email:\"\n            type=\"email\"\n            value={email}\n            changeFunction={this.onChangeEmployeeEmail}\n          />\n          <Input\n            name=\"Phone:\"\n            type=\"text\"\n            value={phone}\n            changeFunction={this.onChangeEmployeePhone}\n          />\n          <Submit value=\"Update Employee\" />\n          <Success name={success} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmployee);\n"]},"metadata":{},"sourceType":"module"}