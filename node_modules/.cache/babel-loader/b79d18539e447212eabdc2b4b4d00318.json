{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cretrix/projects/React-redux-blog/src/pages/companies/edit.js\";\nimport React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../components/basic/input-button\";\nimport Submit from \"../../components/basic/submit-button\";\nimport Errors from \"../../components/basic/errors\";\nimport Success from \"../../components/basic/success\";\nimport { mapStateToProps, mapDispatchToProps } from \"../../store/containers/edit\";\n\nvar EditCompanies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditCompanies, _Component);\n\n  function EditCompanies(props) {\n    var _this;\n\n    _classCallCheck(this, EditCompanies);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditCompanies).call(this, props));\n\n    _this.onChangeCompaniesName = function (e) {\n      _this.setState({\n        name: e.target.value,\n        nameerror: \"\",\n        success: \"\"\n      });\n    };\n\n    _this.onChangeCompaniesEmail = function (e) {\n      _this.setState({\n        email: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onChangeCompaniesLogo = function (e) {\n      _this.setState({\n        logo: e.target.files[0],\n        success: \"\",\n        logoname: \"\"\n      });\n    };\n\n    _this.onChangeCompaniesWebsite = function (e) {\n      _this.setState({\n        website: e.target.value,\n        success: \"\"\n      });\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, name, email, logo, website, company_id, updateCompanies, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, name = _this$state.name, email = _this$state.email, logo = _this$state.logo, website = _this$state.website;\n                company_id = _this.props.match.params.id;\n                updateCompanies = new FormData();\n                updateCompanies.append(\"name\", name);\n                updateCompanies.append(\"email\", email);\n                updateCompanies.append(\"logo\", logo);\n                updateCompanies.append(\"website\", website);\n                _context.prev = 8;\n                _context.next = 11;\n                return Api.editCompanies(company_id, updateCompanies);\n\n              case 11:\n                response = _context.sent;\n\n                if (response.status === 200) {\n                  _this.setState({\n                    success: response.data\n                  });\n                }\n\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](8);\n\n                _this.setState({\n                  nameerror: _context.t0.response.data.errors.name\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[8, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      logo: \"\",\n      logoname: \"\",\n      website: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      success: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(EditCompanies, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var company_id;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                company_id = this.props.match.params.id;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return this.props.getCompany(company_id);\n\n              case 4:\n                console.log(this.props.company.companyData.data);\n                /*  if (this.props.status === 200) {\n                  this.setState({\n                    name: response.data.name == null ? \"\" : response.data.name,\n                    email: response.data.email == null ? \"\" : response.data.email,\n                    logoname:\n                      response.data.logo == null\n                        ? \"\"\n                        : Api.SERVER_URL + \"/storage/logos/\" + response.data.logo,\n                    website: response.data.website == null ? \"\" : response.data.website\n                  });\n                }*/\n\n                _context2.next = 9;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 7]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          name = _this$state2.name,\n          website = _this$state2.website,\n          success = _this$state2.success,\n          logoname = _this$state2.logoname,\n          nameerror = _this$state2.nameerror;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Update Company\"), console.log(this.props.data), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Errors, {\n        name: nameerror,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Name:\",\n        type: \"text\",\n        value: name,\n        changeFunction: this.onChangeCompaniesName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Email:\",\n        type: \"email\",\n        value: email,\n        changeFunction: this.onChangeCompaniesEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"Logo:\",\n        type: \"file\",\n        logoname: logoname,\n        changeFunction: this.onChangeCompaniesLogo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"website:\",\n        type: \"text\",\n        value: website,\n        changeFunction: this.onChangeCompaniesWebsite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Submit, {\n        value: \"Update Company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Success, {\n        name: success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditCompanies;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCompanies);","map":{"version":3,"sources":["/home/cretrix/projects/React-redux-blog/src/pages/companies/edit.js"],"names":["React","Component","Api","connect","Input","Submit","Errors","Success","mapStateToProps","mapDispatchToProps","EditCompanies","props","onChangeCompaniesName","e","setState","name","target","value","nameerror","success","onChangeCompaniesEmail","email","onChangeCompaniesLogo","logo","files","logoname","onChangeCompaniesWebsite","website","onSubmit","preventDefault","state","company_id","match","params","id","updateCompanies","FormData","append","editCompanies","response","status","data","errors","getCompany","console","log","company","companyData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Api from \"../../utils/api\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../components/basic/input-button\";\nimport Submit from \"../../components/basic/submit-button\";\nimport Errors from \"../../components/basic/errors\";\nimport Success from \"../../components/basic/success\";\nimport {\n  mapStateToProps,\n  mapDispatchToProps\n} from \"../../store/containers/edit\";\n\nclass EditCompanies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      logo: \"\",\n      logoname: \"\",\n      website: \"\",\n      errors: \"\",\n      nameerror: \"\",\n      success: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let company_id = this.props.match.params.id;\n\n    try {\n      // let response = await Api.getCompany(company_id);\n      await this.props.getCompany(company_id);\n      console.log(this.props.company.companyData.data);\n      /*  if (this.props.status === 200) {\n        this.setState({\n          name: response.data.name == null ? \"\" : response.data.name,\n          email: response.data.email == null ? \"\" : response.data.email,\n          logoname:\n            response.data.logo == null\n              ? \"\"\n              : Api.SERVER_URL + \"/storage/logos/\" + response.data.logo,\n          website: response.data.website == null ? \"\" : response.data.website\n        });\n      }*/\n    } catch (error) {}\n  }\n\n  onChangeCompaniesName = e => {\n    this.setState({\n      name: e.target.value,\n      nameerror: \"\",\n      success: \"\"\n    });\n  };\n\n  onChangeCompaniesEmail = e => {\n    this.setState({\n      email: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onChangeCompaniesLogo = e => {\n    this.setState({\n      logo: e.target.files[0],\n      success: \"\",\n      logoname: \"\"\n    });\n  };\n\n  onChangeCompaniesWebsite = e => {\n    this.setState({\n      website: e.target.value,\n      success: \"\"\n    });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n    const { name, email, logo, website } = this.state;\n    let company_id = this.props.match.params.id;\n    const updateCompanies = new FormData();\n    updateCompanies.append(\"name\", name);\n    updateCompanies.append(\"email\", email);\n    updateCompanies.append(\"logo\", logo);\n    updateCompanies.append(\"website\", website);\n\n    try {\n      let response = await Api.editCompanies(company_id, updateCompanies);\n      if (response.status === 200) {\n        this.setState({\n          success: response.data\n        });\n      }\n    } catch (error) {\n      this.setState({\n        nameerror: error.response.data.errors.name\n      });\n    }\n  };\n\n  render() {\n    const { email, name, website, success, logoname, nameerror } = this.state;\n    return (\n      <div>\n        <h3 align=\"center\">Update Company</h3>\n        {console.log(this.props.data)}\n        <form onSubmit={this.onSubmit}>\n          <Errors name={nameerror} />\n          <Input\n            name=\"Name:\"\n            type=\"text\"\n            value={name}\n            changeFunction={this.onChangeCompaniesName}\n          />\n          <Input\n            name=\"Email:\"\n            type=\"email\"\n            value={email}\n            changeFunction={this.onChangeCompaniesEmail}\n          />\n          <Input\n            name=\"Logo:\"\n            type=\"file\"\n            logoname={logoname}\n            changeFunction={this.onChangeCompaniesLogo}\n          />\n          <Input\n            name=\"website:\"\n            type=\"text\"\n            value={website}\n            changeFunction={this.onChangeCompaniesWebsite}\n          />\n          <Submit value=\"Update Company\" />\n          <Success name={success} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCompanies);\n"]},"metadata":{},"sourceType":"module"}