{"ast":null,"code":"import _objectSpread from \"/home/cretrix/projects/React-redux-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_COMPANIES, DELETE_COMPANY, UPDATE_COMPANY, CREATE_COMPANY } from \"../types/companies\";\nvar initialState = {\n  res: \"\",\n  data: [],\n  error: null,\n  isLoading: true\n};\nexport default function companiesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COMPANIES:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    /*  case DELETE_POST:\n      return state.filter(post => post._id !== action.payload.id);\n    case FETCH_POST:\n      return action.posts;*/\n\n    case CREATE_COMPANY:\n      return _objectSpread({}, state, {\n        res: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/cretrix/projects/React-redux-blog/src/store/reducers/companiesReducer.js"],"names":["GET_COMPANIES","DELETE_COMPANY","UPDATE_COMPANY","CREATE_COMPANY","initialState","res","data","error","isLoading","companiesReducer","state","action","type","payload"],"mappings":";AAAA,SACEA,aADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,oBALP;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,EADc;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,eAAe,SAASC,gBAAT,GAAwD;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,aAAL;AACE,+BAAYU,KAAZ;AAAmBJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAAhC;;AACF;;;;;AAIA,SAAKV,cAAL;AACE,+BAAYO,KAAZ;AAAmBL,QAAAA,GAAG,EAAEM,MAAM,CAACE;AAA/B;;AACF;AACE,aAAOH,KAAP;AAVJ;AAYD","sourcesContent":["import {\n  GET_COMPANIES,\n  DELETE_COMPANY,\n  UPDATE_COMPANY,\n  CREATE_COMPANY\n} from \"../types/companies\";\n\nconst initialState = {\n  res: \"\",\n  data: [],\n  error: null,\n  isLoading: true\n};\n\nexport default function companiesReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_COMPANIES:\n      return { ...state, data: action.payload };\n    /*  case DELETE_POST:\n      return state.filter(post => post._id !== action.payload.id);\n    case FETCH_POST:\n      return action.posts;*/\n    case CREATE_COMPANY:\n      return { ...state, res: action.payload };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}