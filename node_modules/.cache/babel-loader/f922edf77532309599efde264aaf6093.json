{"ast":null,"code":"import _regeneratorRuntime from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cretrix/projects/React-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar SERVER_URL = \"http://127.0.0.1:8000\";\n\nvar login =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(data) {\n    var LOGIN_ENDPOINT, _response, jwt;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            LOGIN_ENDPOINT = \"\".concat(SERVER_URL, \"/api/login\");\n            console.log('ddd');\n            _context.prev = 2;\n            _context.next = 5;\n            return axios.post(LOGIN_ENDPOINT, data);\n\n          case 5:\n            _response = _context.sent;\n            console.log(_response); //  if(response.status === 200 && response.data.remember_token && response.data.expireAt){\n\n            if (_response.status === 200 && _response.data.success === true) {\n              jwt = _response.data.token; //  let expire_at = response.data.expireAt;\n\n              localStorage.setItem(\"access_token\", jwt);\n            }\n\n            return _context.abrupt(\"return\", _response.data.success);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0.message);\n            return _context.abrupt(\"return\", response.data.message);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 11]]);\n  }));\n\n  return function login(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/*\nconst register = async (data) => {\n    const SIGNUP_ENDPOINT = `${SERVER_URL}/api/user/register`;\n    try {\n        let response = await axios({\n            method: 'post',\n            responseType: 'json',\n            url: SIGNUP_ENDPOINT,\n            data: data\n          });\n    } catch(e){\n        console.log(e);\n    }\n}*/\n\n/*\nconst logout = (props) => {\n    localStorage.removeItem(\"access_token\");\n    props.history.push('/login');\n   // localStorage.removeItem(\"expire_at\");\n}\n*/\n\n\nvar isAuth = function isAuth() {\n  console.log(localStorage.getItem('access_token'));\n\n  if (localStorage.getItem('access_token') == null) {\n    return false;\n  }\n\n  return true;\n};\n\nexport { login, isAuth, SERVER_URL };","map":{"version":3,"sources":["/home/cretrix/projects/React-blog/src/utils/JWTAuth.js"],"names":["axios","SERVER_URL","login","data","LOGIN_ENDPOINT","console","log","post","response","status","success","jwt","token","localStorage","setItem","message","isAuth","getItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,UAAU,GAAG,uBAAnB;;AAEA,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJC,YAAAA,cADI,aACgBH,UADhB;AAEVI,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAFU;AAAA;AAAA,mBAIeN,KAAK,CAACO,IAAN,CAAWH,cAAX,EAA2BD,IAA3B,CAJf;;AAAA;AAIFK,YAAAA,SAJE;AAKLH,YAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ,EALK,CAMR;;AACE,gBAAGA,SAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,SAAQ,CAACL,IAAT,CAAcO,OAAd,KAAwB,IAAtD,EAA2D;AACnDC,cAAAA,GADmD,GAC7CH,SAAQ,CAACL,IAAT,CAAcS,KAD+B,EAEzD;;AACAC,cAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,GAArC;AAED;;AAZK,6CAcCH,SAAQ,CAACL,IAAT,CAAcO,OAdf;;AAAA;AAAA;AAAA;AAkBNL,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAES,OAAd;AAlBM,6CAmBCP,QAAQ,CAACL,IAAT,CAAcY,OAnBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALb,KAAK;AAAA;AAAA;AAAA,GAAX;AAuBA;;;;;;;;;;;;;;;AAcA;;;;;;;;;AAQA,IAAMc,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBX,EAAAA,OAAO,CAACC,GAAR,CAAYO,YAAY,CAACI,OAAb,CAAqB,cAArB,CAAZ;;AACA,MAAIJ,YAAY,CAACI,OAAb,CAAqB,cAArB,KAAsC,IAA1C,EAAgD;AAC5C,WAAO,KAAP;AACH;;AACF,SAAO,IAAP;AACF,CAND;;AASA,SAASf,KAAT,EAAgBc,MAAhB,EAAwBf,UAAxB","sourcesContent":["import axios from 'axios';\nconst SERVER_URL = \"http://127.0.0.1:8000\"\n\nconst login = async (data) => {\n    const LOGIN_ENDPOINT = `${SERVER_URL}/api/login`;\n    console.log('ddd');\n    try {\n        let response = await axios.post(LOGIN_ENDPOINT, data);\n         console.log(response)\n      //  if(response.status === 200 && response.data.remember_token && response.data.expireAt){\n        if(response.status === 200 && response.data.success===true){\n            let jwt = response.data.token;\n          //  let expire_at = response.data.expireAt;\n          localStorage.setItem(\"access_token\", jwt);\n    \n        } \n\n        return response.data.success;\n\n\n    } catch(e){\n        console.log(e.message);\n        return response.data.message;\n    }\n}\n\n/*\nconst register = async (data) => {\n    const SIGNUP_ENDPOINT = `${SERVER_URL}/api/user/register`;\n    try {\n        let response = await axios({\n            method: 'post',\n            responseType: 'json',\n            url: SIGNUP_ENDPOINT,\n            data: data\n          });\n    } catch(e){\n        console.log(e);\n    }\n}*/\n/*\nconst logout = (props) => {\n    localStorage.removeItem(\"access_token\");\n    props.history.push('/login');\n   // localStorage.removeItem(\"expire_at\");\n}\n*/\n\nconst isAuth = () => {\n    console.log(localStorage.getItem('access_token'));\n    if (localStorage.getItem('access_token')==null) {\n        return false;\n    }\n   return true;\n}\n\n\nexport { login, isAuth, SERVER_URL }"]},"metadata":{},"sourceType":"module"}